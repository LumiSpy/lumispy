# In Azure pipelines, we test only using anaconda (so conda and conda-forge packages only)
variables:
  MPLBACKEND: agg # Necessary when running test which generate matplotlib figure
  ENV_NAME: test_env

trigger:
  tags:
    include:
    # build on any tag
    - '*'
  branches:
    include:
    # build on all branches
    - '*'

resources:
  repositories:
    - repository: templates
      type: github
      name: hyperspy/ci-scripts
      # For more details on service connection endpoint, see
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints
      endpoint: jordiferrero # Azure DevOps service connection
      ref: use_mamba

strategy:
  matrix:
    Linux_Python38:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    MacOS_Python38:
      vmImage: 'macOS-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Windows_Python38:
      vmImage: 'windows-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)\mambaforge

pool:
  vmImage: '$(vmImage)'

steps:
- template: azure_pipelines/clone_ci-scripts_repo.yml@templates
- template: azure_pipelines/install_mambaforge.yml@templates
- template: azure_pipelines/activate_conda.yml@templates
- template: azure_pipelines/setup_anaconda_packages.yml@templates

- bash: |
    source activate $ENV_NAME
    # Install package using pip
    pip install . --no-deps
    conda list
  displayName: Install package

- bash: |
    source activate $ENV_NAME
    pytest
    python -c 'import lumispy as lum'
  displayName: Run test suite

# - template: azure_pipelines/generate_distribution.yml@templates
# - template: azure_pipelines/publish_distribution.yml@templates
# - template: azure_pipelines/update_github_release.yml@templates
#   parameters:
#     # Set the token generated with github from the developer settings/personal
#     # access tokens menu in azure pipeline
#     github_token_name: ''
